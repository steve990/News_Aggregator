{"version":3,"sources":["img/newspaper.png","img/crow2.jpg","components/Header.js","components/Article.js","components/Menu.js","components/About.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","Newspaper","alt","React","Component","Article","formatDate","bind","limitTextLength","input","dateTime","split","date","time","text","length","substring","this","props","articles","map","article","index","key","href","url","crowImg","title","urlToImage","source","name","author","publishedAt","description","Menu","getNews","setURL","setBurgerState","event","preventDefault","searchQuery","language","urlSelector","selectorValue","burgerState","onClick","to","activeClassName","onSubmit","type","id","placeholder","onChange","target","value","htmlFor","About","Footer","API_KEY","BASE_URL","App","state","apiKey","setCookie","getCookie","lastSearchCookie","languageCookie","setState","window","addEventListener","cookieType","cookieValue","d","Date","setTime","getTime","numDays","expires","toUTCString","document","cookie","ca","decodeURIComponent","i","c","charAt","indexOf","search","category","fetch","then","response","json","data","catch","error","alert","exact","path","component","render","defaultCategory","from","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d8df432.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/newspaper.b9742b82.png\";","module.exports = __webpack_public_path__ + \"static/media/crow2.2d02c50b.jpg\";","import React from 'react';\r\nimport Newspaper from '../img/newspaper.png';\r\n\r\nclass Header extends React.Component {\r\n    render(){\r\n        return(\r\n            <header>\r\n                <div className='headerMask'>\r\n                    <span>\r\n                        <img src={Newspaper} alt='Movie Reels'></img>\r\n                        <h1>News API</h1>\r\n                        <img className='flipImg' src={Newspaper} alt='Movie Reels'></img>\r\n                    </span>\r\n                    <h3>Your source for online news in a single page...</h3>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Header;","import React from 'react';\r\nimport crowImg from '../img/crow2.jpg';\r\n\r\nclass Article extends React.Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.limitTextLength = this.limitTextLength.bind(this);\r\n    }\r\n\r\n    // Formats the date to a easy to read output\r\n    formatDate(input){\r\n        let dateTime = input.split(\"T\");\r\n        let date = dateTime[0];\r\n        let time = dateTime[1].split(\":\");\r\n\r\n        let response = date + ' @ ' + time[0] +':' + time[1];\r\n\r\n        return response;\r\n    }\r\n\r\n    // If the Title or Author returns a string greater than 90 characters,\r\n    // it will be shortened to 90 and have '...' appended to the end\r\n    limitTextLength(text){\r\n        if (text){\r\n            if (text.length > 90){\r\n                text = text.substring(0, 90) + '...';\r\n            } \r\n            return text;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    // Renders the artcle\r\n    render(){\r\n        return (\r\n            <main>\r\n                {this.props.articles.map((article, index) => (\r\n                    <article key={index}>\r\n                        <a href={article.url}>\r\n                            <img className='crow' src={crowImg} alt='Hover crow to fly to article.'></img>\r\n                            <h3>{this.limitTextLength(article.title)}</h3>\r\n                            {article.urlToImage == null ?\r\n                                null \r\n                                : \r\n                                <div className='imgContainer'>\r\n                                    <img className='articleImg' src={article.urlToImage} alt=\"Relevant to article\" />\r\n                                </div>\r\n                            }\r\n                            <p className='source'>{article.source.name}</p>\r\n                            <p className='author'>{this.limitTextLength(article.author)}</p>\r\n                            <time>{this.formatDate(article.publishedAt)}</time>\r\n                            <p>{article.description}</p>\r\n                        </a>\r\n                    </article>\r\n                ))}  \r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Article;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Menu extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.props.getNews();\r\n        this.props.setURL();\r\n        this.props.setBurgerState();\r\n    }\r\n\r\n    // Calls the News API query callback function\r\n    getNews(event){\r\n        event.preventDefault();\r\n        this.props.getNews(this.props.searchQuery, this.props.language);\r\n    }\r\n\r\n    // Calls the URL setting callback function\r\n    setURL(urlSelector, selectorValue){\r\n        this.props.setURL(urlSelector, selectorValue);\r\n    }\r\n\r\n    // Calls the callback function to change the hamburger menu state\r\n    setBurgerState(){\r\n        this.props.setBurgerState();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            // Renders the nav menu\r\n            <nav className={this.props.burgerState ? 'navClosed' : 'navOpen'}>\r\n                <ul>\r\n                    <div \r\n                        className={this.props.burgerState ? 'burger burgerClosed' : 'burger burgerOpen'}\r\n                        onClick={() => this.setBurgerState()}\r\n                    >\r\n                        <span className=\"burgerLine Line1\"></span>\r\n                        <span className=\"burgerLine Line2\"></span>\r\n                        <span className=\"burgerLine Line3\"></span>\r\n                        \r\n                    </div>\r\n                    <div className=\"mainNav\">\r\n                        <li>\r\n                            <NavLink to=\"/news\" activeClassName=\"active\">Main</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/news/about\" activeClassName=\"active\">About</NavLink>\r\n                        </li>\r\n                    </div>\r\n                    <li>\r\n                        <form onSubmit={(event) => this.getNews(event)}>\r\n                            <input \r\n                                type='sumbit' \r\n                                id='search'\r\n                                name='search'\r\n                                placeholder={this.props.searchQuery}\r\n                                onChange={(event) => this.setURL('searchQuery', event.target.value)}/>\r\n                            <button \r\n                                type='button' \r\n                                htmlFor='search'\r\n                                onClick={(event) => this.getNews(event)}>Search News</button>\r\n                            <select \r\n                                id=\"language\"\r\n                                value={this.props.language}\r\n                                onChange={(event) => this.setURL('language', event.target.value)}>\r\n                                <option value=\"ar\">ar</option>\r\n                                <option value=\"de\">de</option>\r\n                                <option value=\"en\">en</option>\r\n                                <option value=\"es\">es</option>\r\n                                <option value=\"fr\">fr</option>\r\n                                <option value=\"he\">he</option>\r\n                                <option value=\"it\">it</option>\r\n                                <option value=\"nl\">nl</option>\r\n                                <option value=\"no\">no</option>\r\n                                <option value=\"pt\">pt</option>\r\n                                <option value=\"ru\">ru</option>\r\n                                <option value=\"se\">se</option>\r\n                                <option value=\"ud\">ud</option>\r\n                                <option value=\"zh\">zh</option>\r\n                            </select>\r\n                        </form>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass About extends React.Component{\r\n    render(){\r\n        return (\r\n            <main>\r\n                <div className='thanks'>\r\n                    <h3>App by Steve Gilkes</h3>\r\n                    <br/>\r\n                    <h4>Thanks to <a href='https://newsapi.org'>News API</a> for the REST API that is the backend of this site...</h4>\r\n                    <h4>Banner image by <a href='https://unsplash.com/@aro_mal'>Aromal M S</a> on Unsplash</h4>\r\n                    <h4>Typewriter sidebar images by <a href='https://unsplash.com/@florianklauer'>Florian Klauer</a> on Unsplash</h4>\r\n                    <h4>Crow hover image by <a href='https://unsplash.com/@auntneecey'>Denise Johnson</a> on Unsplash</h4>\r\n                    <h4>Newspaper ico and title image by <a href='https://pixabay.com/vectors/newspaper-news-paper-journal-151438/'>OpenClipart-Vectors</a> on Pixabay</h4>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nclass Footer extends React.Component{\r\n    render(){\r\n        return (\r\n            <footer>\r\n                <p>Thanks to <a href='https://newsapi.org'>News API</a> for the REST API that is the backend of this site.</p>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React    from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport Header   from './components/Header';\nimport Article  from './components/Article';\nimport Menu     from './components/Menu';\nimport About    from './components/About';\nimport Footer   from './components/Footer';\nimport './styles/index.css';\n\nconst API_KEY       = 'c1e8a0f1855c4fcf814aef1091bd6c53';\nconst BASE_URL      = 'https://newsapi.org/v2/everything?sortBy=publishedAt&apiKey='\n                    + API_KEY + \"&q=\";\nconst LAST_SEARCH   = 'lastNewsSearch';\nconst LANGUAGE      = 'language';\n\nclass App extends React.Component { \n    constructor() {\n        super();\n        this.state  = {\n            apiKey : API_KEY,\n            articles : [],\n            searchQuery: 'today',\n            language: 'en',\n            burgerState: false\n        };\n\n        // Register class functions.\n        this.getNews        = this.getNews.bind(this);\n        this.setCookie      = this.setCookie.bind(this);\n        this.getCookie      = this.getCookie.bind(this);\n        this.setURL         = this.setURL.bind(this);\n        this.setBurgerState = this.setBurgerState.bind(this);\n    }\n\n    // Called when constructor is finished building component.\n    componentDidMount() {\n        // Read search perameters from cookies.\n        // If cookie set, set state for last search and language\n        let lastSearchCookie    = this.getCookie(LAST_SEARCH);\n        let languageCookie      = this.getCookie(LANGUAGE);\n\n        if (lastSearchCookie !== null && lastSearchCookie !== 'undefined'){\n            this.setState({searchQuery: lastSearchCookie})\n        } else {\n            lastSearchCookie = this.state.searchQuery;\n        }\n\n        if (languageCookie !== null && languageCookie !== 'undefined'){\n            this.setState({language: languageCookie})\n        } else {\n            languageCookie = this.state.language;\n        }\n\n        this.getNews(lastSearchCookie, languageCookie);\n        //If window size changes, close the hamburger menu\n        window.addEventListener(\"resize\", () => this.setState({ burgerState: true}));\n    }\n\n    //Toggle hamburger menu\n    setBurgerState(){\n        this.setState({ burgerState: !this.state.burgerState });\n    }\n\n    //Modify URL before passing search parameters to News API\n    setURL(urlSelector, selectorValue) {\n        switch (urlSelector) {\n            case 'language':\n                this.setState({ \n                    language: selectorValue \n                }, () => { \n                    this.getNews(this.state.searchQuery, selectorValue);\n                });\n                break;\n            case 'searchQuery':\n                this.setState({\n                    searchQuery: selectorValue \n                });\n                break;\n                default:\n                    return false;\n            }\n    }\n\n    // Set cookie that expires 1000 days from now.\n    // This can store the user's preferred news category.\n    setCookie(cookieType, cookieValue) {\n        var numDays = 1000;\n        var d = new Date();\n        d.setTime(d.getTime() + (numDays*24*60*60*1000));\n        var expires = \"expires=\"+ d.toUTCString();\n        document.cookie = cookieType + \"=\" + cookieValue \n                        + \";\" + expires + \";path=/\";\n    }\n\n    // Get cookie data if cookie exists.\n    getCookie(cookieType) {\n        var name = cookieType + \"=\";\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var ca = decodedCookie.split(';');\n        for(var i = 0; i <ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                // Cookie found.\n                return c.substring(name.length, c.length);\n            }\n        }\n        // Cookie not found.\n        return null;\n    }\n\n    // Send search string to News API.\n    getNews(search, language, category) {    \n        let URL = BASE_URL \n                + search\n                + '&language=' + language;\n        fetch(URL).then(response => response.json())\n            .then((data) => {\n                this.setState({articles: data.articles});\n            })\n            .then(() => {\n                this.setCookie('lastNewsSearch', search);\n                this.setCookie('language', language);\n            })\n            .catch((error) => {\n                alert(error);\n            });         \n    }\n\n    render() {\n        return (   \n            <Router>\n                {/* Renders news banner at top of the page */}\n                <Header />\n                {/* Renders nav menu at top of the page */}\n                <Menu \n                    getNews         ={this.getNews}\n                    setURL          ={this.setURL}\n                    setBurgerState  ={this.setBurgerState}\n                    searchQuery     ={this.state.searchQuery}\n                    language        ={this.state.language}\n                    burgerState     ={this.state.burgerState}\n                    />\n                <div className='routeContainer'>\n                    <div className='sideBannerLeft'></div>\n                    <Switch>\n                        {/* Route to display the about page */}\n                        <Route\n                            exact={true}\n                            path='/news/about/'\n                            component={About}\n                            />\n                        {/* Route to display the news */}\n                        <Route \n                            exact={true}\n                            path='/news/'\n                            render={props => <Article \n                                {...props}\n                                articles={this.state.articles}\n                                category={this.state.defaultCategory}\n                                />}\n                        />\n                        {/* Set index to main news page */}\n                        <Redirect from='/' to='/news/' />\n                        {/* Route to display the about page */}\n                        <Route\n                            path='/*'\n                            component={About}\n                            />\n                    </Switch>\n                    <div className='sideBannerRight'></div>\n                </div>   \n                {/* Renders the footer */}\n                <Footer />\n            </Router> \n        )\n    }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}